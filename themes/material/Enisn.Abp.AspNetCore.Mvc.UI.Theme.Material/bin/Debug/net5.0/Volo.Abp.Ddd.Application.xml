<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Volo.Abp.Ddd.Application</name>
    </assembly>
    <members>
        <member name="M:System.Linq.AbpPagingQueryableExtensions.PageBy``1(System.Linq.IQueryable{``0},Volo.Abp.Application.Dtos.IPagedResultRequest)">
            <summary>
            Used for paging with an <see cref="T:Volo.Abp.Application.Dtos.IPagedResultRequest"/> object.
            </summary>
            <param name="query">Queryable to apply paging</param>
            <param name="pagedResultRequest">An object implements <see cref="T:Volo.Abp.Application.Dtos.IPagedResultRequest"/> interface</param>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntityAsync(`5)">
            <summary>
            Maps <typeparamref name="TCreateInput"/> to <typeparamref name="TEntity"/> to create a new entity.
            It uses <see cref="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntity(`5)"/> by default.
            It can be overriden for custom mapping.
            Overriding this has higher priority than overriding the <see cref="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntity(`5)"/>
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntity(`5)">
            <summary>
            Maps <typeparamref name="TCreateInput"/> to <typeparamref name="TEntity"/> to create a new entity.
            It uses <see cref="T:Volo.Abp.ObjectMapping.IObjectMapper"/> by default.
            It can be overriden for custom mapping.
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.SetIdForGuids(`0)">
            <summary>
            Sets Id value for the entity if <typeparamref name="TKey"/> is <see cref="T:System.Guid"/>.
            It's used while creating a new entity.
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntityAsync(`6,`0)">
            <summary>
            Maps <typeparamref name="TUpdateInput"/> to <typeparamref name="TEntity"/> to update the entity.
            It uses <see cref="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntity(`6,`0)"/> by default.
            It can be overriden for custom mapping.
            Overriding this has higher priority than overriding the <see cref="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntity(`6,`0)"/>
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyCrudAppService`7.MapToEntity(`6,`0)">
            <summary>
            Maps <typeparamref name="TUpdateInput"/> to <typeparamref name="TEntity"/> to update the entity.
            It uses <see cref="T:Volo.Abp.ObjectMapping.IObjectMapper"/> by default.
            It can be overriden for custom mapping.
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.ApplySorting(System.Linq.IQueryable{`0},`4)">
            <summary>
            Should apply sorting if needed.
            </summary>
            <param name="query">The query.</param>
            <param name="input">The input.</param>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.ApplyDefaultSorting(System.Linq.IQueryable{`0})">
            <summary>
            Applies sorting if no sorting specified but a limited result requested.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.ApplyPaging(System.Linq.IQueryable{`0},`4)">
            <summary>
            Should apply paging if needed.
            </summary>
            <param name="query">The query.</param>
            <param name="input">The input.</param>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.CreateFilteredQuery(`4)">
            <summary>
            This method should create <see cref="T:System.Linq.IQueryable`1"/> based on given input.
            It should filter query if needed, but should not do sorting or paging.
            Sorting should be done in <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.ApplySorting(System.Linq.IQueryable{`0},`4)"/> and paging should be done in <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.ApplyPaging(System.Linq.IQueryable{`0},`4)"/>
            methods.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.CreateFilteredQueryAsync(`4)">
            <summary>
            This method should create <see cref="T:System.Linq.IQueryable`1"/> based on given input.
            It should filter query if needed, but should not do sorting or paging.
            Sorting should be done in <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.ApplySorting(System.Linq.IQueryable{`0},`4)"/> and paging should be done in <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.ApplyPaging(System.Linq.IQueryable{`0},`4)"/>
            methods.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetOutputDtoAsync(`0)">
            <summary>
            Maps <typeparamref name="TEntity"/> to <typeparamref name="TGetOutputDto"/>.
            It internally calls the <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetOutputDto(`0)"/> by default.
            It can be overriden for custom mapping.
            Overriding this has higher priority than overriding the <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetOutputDto(`0)"/>
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetOutputDto(`0)">
            <summary>
            Maps <typeparamref name="TEntity"/> to <typeparamref name="TGetOutputDto"/>.
            It uses <see cref="T:Volo.Abp.ObjectMapping.IObjectMapper"/> by default.
            It can be overriden for custom mapping.
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetListOutputDtosAsync(System.Collections.Generic.List{`0})">
            <summary>
            Maps a list of <typeparamref name="TEntity"/> to <typeparamref name="TGetListOutputDto"/> objects.
            It uses <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetListOutputDtoAsync(`0)"/> method for each item in the list.
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetListOutputDtoAsync(`0)">
            <summary>
            Maps <typeparamref name="TEntity"/> to <typeparamref name="TGetListOutputDto"/>.
            It internally calls the <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetListOutputDto(`0)"/> by default.
            It can be overriden for custom mapping.
            Overriding this has higher priority than overriding the <see cref="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetListOutputDto(`0)"/>
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.AbstractKeyReadOnlyAppService`5.MapToGetListOutputDto(`0)">
            <summary>
            Maps <typeparamref name="TEntity"/> to <typeparamref name="TGetListOutputDto"/>.
            It uses <see cref="T:Volo.Abp.ObjectMapping.IObjectMapper"/> by default.
            It can be overriden for custom mapping.
            </summary>
        </member>
        <member name="M:Volo.Abp.Application.Services.ApplicationService.CheckPolicyAsync(System.String)">
            <summary>
            Checks for given <paramref name="policyName"/>.
            Throws <see cref="T:Volo.Abp.Authorization.AbpAuthorizationException"/> if given policy has not been granted.
            </summary>
            <param name="policyName">The policy name. This method does nothing if given <paramref name="policyName"/> is null or empty.</param>
        </member>
    </members>
</doc>
